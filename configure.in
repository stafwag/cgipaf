dnl Process this file with autoconf to produce a configure script.
AC_INIT(cgipaf.c)
AC_CONFIG_HEADER(config.h)
AC_SUBST(ARG)
AC_SUBST(NEED_COMPAT_H)
AC_SUBST(LIBOBJS)

NEED_COMPAT_H="COMPAT"

PRESET_CFLAGS="$CFLAGS"

LIBOBJS="xstring.o ccgi.o configfile.o showmsg.o ephp.o accessdb.o createcookie.o searchdomain.o xmalloc.o out_of_memory.o run_cmd.o write_log.o"

dnl Checks for programs.
AC_PROG_CC
AC_PROG_MAKE_SET
AC_ARG_ENABLE(pam,[  --enable-pam            Enable pam support (default)],
   [ if test "$enableval" != "no"; then
        ARG="WITHPAM"
	ENABLE_PAM="yes"
      fi ],
   [ ARG="WITHPAM" ]) 
AC_ARG_WITH(libcrack, [  --with-libcrack   try to use librack ])

dnl Checks for libraries.

if test "$ARG" = "WITHPAM"; then
   AC_MSG_CHECKING(checking for PAM support...)
   ls -l /etc/pam* > /dev/null
   if test "$?" = "0"; then
      ENABLE_PAM="yes"
      AC_MSG_RESULT("yes");
      else
         AC_MSG_RESULT("no");
   fi
   AC_CHECK_LIB(pam,pam_start,ARG="WITHPAM",ARG="")
   if test "$ENABLE_PAM"="yes"; then
      if test "$ARG" != "WITHPAM"; then
      AC_MSG_ERROR("PAM support enabled but pam_start function not found install the pam development package and rerun configure")
      fi
   fi
fi

if test "$ARG" != "WITHPAM"; then
   AC_MSG_WARN(***********************************************************)
   AC_MSG_WARN(you are compiling passwd.cgi viewmailcfg.cgi mailcfg.cgi)
   AC_MSG_WARN(without pam support. systems without pam support are only)
   AC_MSG_WARN(supported if your system use the standard password file)
   AC_MSG_WARN(location /etc/passwd /etc/shadow and uses the crypt)
   AC_MSG_WARN(function to encrypt the passwords)
   AC_MSG_WARN(***********************************************************)
   AC_CHECK_LIB(crypt,crypt,,AC_MSG_ERROR(no pam and no crypt library found, i'm giving up))
   LIBOBJS="$LIBOBJS pass.o"
 else
   AC_CHECK_LIB(pam,pam_authenticate,[ ], \ 
     AC_MSG_ERROR(no valid pam library found))
   AC_CHECK_LIB(pam,pam_chauthtok,[ ], \
     AC_MSG_ERROR(no valid pam library found))
   AC_CHECK_LIB(pam,pam_end,,AC_MSG_ERROR(no valid pam library found))
   LIBOBJS="$LIBOBJS passpam.o"
fi

if test "$with_libcrack" != "no"; then
   AC_CHECK_HEADERS(crack.h,[ HAVE_CRACK_H=1 ],AC_MSG_WARN(crack.h not found cracklib support is disabled!!!!))
   if test "$HAVE_CRACK_H" = "1"; then 
      AC_CHECK_LIB(crack,FascistCheck,,AC_MSG_WARN(cracklib not found cracklib support is disabled!!!!))
   fi
fi

AC_CHECK_FUNCS(dbm_open dbm_fetch dbm_store dbm_close,,NEED_NDBMLIB="yes")

if test "$NEED_NDBMLIB" = "yes"; then

AC_CHECK_LIB(ndbm,dbm_open,[ ],[ NDBM_LIB="no" ])

if test "$NDBM_LIB" != "no"; then
  AC_CHECK_LIB(ndbm,dbm_fetch,[ ],[ NDBM_LIB="no" ])
  AC_CHECK_LIB(ndbm,dbm_store,[ ],[ NDBM_LIB="no" ])
  AC_CHECK_LIB(ndbm,dbm_close,,[ NDBM_LIB="no" ])
fi

if test "$NDBM_LIB" = "no"; then
  
  AC_CHECK_LIB(gdbm,dbm_open,[ ],[ GDBM_LIB="no" ])
  AC_CHECK_LIB(gdbm,dbm_fetch,[ ],[ GDBM_LIB="no" ])
  AC_CHECK_LIB(gdbm,dbm_store,[ ],[ GDBM_LIB="no" ])
  AC_CHECK_LIB(gdbm,dbm_close,,[ GDBM_LIB="no" ])
  
  if test "$GDBM_LIB" = "no"; then

     AC_CHECK_LIB(db1,dbm_open,[ ],[ DB1_LIB="no" ])
     AC_CHECK_LIB(db1,dbm_fetch,[ ],[ DB1_LIB="no" ])
     AC_CHECK_LIB(db1,dbm_store,[ ],[ DB1LIB="no" ])
     AC_CHECK_LIB(db1,dbm_close,,[ DB1_LIB="no" ])
   
   if test "$DB1_LIB" = "no";then
  
     AC_CHECK_LIB(db,dbm_open,[ ],AC_MSG_ERROR(no valid ndbm library found)) 
     AC_CHECK_LIB(db,dbm_fetch,[ ],AC_MSG_ERROR(no valid ndbm library found)) 
     AC_CHECK_LIB(db,dbm_store,,AC_MSG_ERROR(no valid ndbm library found)) 
     AC_CHECK_LIB(db,dbm_close,,AC_MSG_ERROR(no valid ndbm library found)) 
   
   fi
  
  fi

fi

fi

dnl Checks for header files.

AC_HEADER_STDC

AC_CHECK_HEADERS(ndbm.h,,[ HAVE_NDBM_H="no" ]) 

HAVE_GDBMDIR_NDBM_H="NO_GDBMDIR_NDBM_H"

if test "$HAVE_NDBM_H" = "no"; then
    AC_CHECK_HEADERS(gdbm-ndbm.h,,[ HAVE_GDBM_NDBM_H="no" ])
      if test "$HAVE_GDBM_NDBM_H" = "no"; then
         unset $HAVE_GDBM_NDBM_H
         AC_MSG_CHECKING(for gdm/ndbm.h...)
         AC_EGREP_HEADER(gdbm/ndbm.h,gdbm/ndbm.h, \
	 [ HAVE_GDBMDIR_NDBM_H="HAVE_GDBMDIR_NDBM_H" \
	   AC_SUBST(HAVE_GDBMDIR_NDBM_H); AC_MSG_RESULT("yes")  ], \
	 [ HAVE_GDBMDIR_NDBM_H="no"; AC_MSG_RESULT("no") ])
         if test "$HAVE_GDBMDIR_NDBM_H" = "no"; then
            HAVE_GDBMDIR_NDBM_H="NO_GDBMDIR_NDBM_H"
	    AC_CHECK_HEADERS(db1/ndbm.h,, \
            AC_MSG_ERROR(no valid ndbm header file found))
         fi
      fi
fi

AC_CHECK_HEADERS(sys/time.h,,\
    AC_CHECK_HEADERS(time.h,,AC_MSG_ERROR(time.h not found)))
AC_CHECK_HEADERS(unistd.h,,AC_MSG_ERROR(unistd.h not found))
AC_CHECK_HEADERS(stdlib.h,,AC_MSG_ERROR(stdlib.h not found))
AC_CHECK_HEADERS(stdio.h,,AC_MSG_ERROR(stdio.h not found))
AC_CHECK_HEADERS(string.h,,AC_MSG_ERROR(string.h not found))
AC_CHECK_HEADERS(fcntl.h,,AC_MSG_ERROR(fcntl.h not found))
AC_CHECK_HEADERS(malloc.h,,AC_MSG_ERROR(malloc.h not found))
AC_CHECK_HEADERS(errno.h,,AC_MSG_ERROR(errno.h not found))
AC_CHECK_HEADERS(sys/stat.h,,AC_MSG_ERROR(sys/stat.h not found))
AC_CHECK_HEADERS(pwd.h,,AC_MSG_ERROR(pwd.h not found))
AC_CHECK_HEADERS(stdarg.h,,AC_MSG_ERROR(stdarg.h not found))
AC_CHECK_HEADERS(syslog.h,,AC_MSG_ERROR(syslog.h not found))

if test "$ARG" != "WITHPAM"; then
  AC_CHECK_HEADERS(shadow.h,,AC_MSG_ERROR(shadow.h not found))
  ARG="NOPAM"
else
  AC_CHECK_HEADERS(security/pam_appl.h,,AC_MSG_ERROR(pam_appl.h not found))
fi

if test -z "$PRESET_CFLAGS"; then
   CFLAGS=`echo "$CFLAGS" | sed -e 's/-g//'`
fi

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_TYPE_SIZE_T

dnl Checks for library functions.
AC_CHECK_FUNCS(free realloc malloc strdup strerror strstr va_start va_end vsnprintf strncat strncpy openlog syslog closelog)
AC_CHECK_FUNCS(unsetenv,,NEED_COMPAT_H="yes")

AC_CHECK_FUNCS(getdomainname,,NO_GETDOMAINNAME=yes)

if test "$NO_GETDOMAINNAME" = "yes"; then
   AC_CHECK_HEADERS(sys/systeminfo.h)
   AC_CHECK_FUNCS(sysinfo)
   NEED_COMPAT_H="yes"
fi

AC_CHECK_FUNCS(gethostname,,NO_GETHOSTNAME=yes)

if test "$NO_GETHOSTNAME" = "yes"; then
   AC_CHECK_HEADERS(sys/systeminfo.h)
   AC_CHECK_FUNCS(sysinfo,,AC_MSG_ERROR(your system dont support gethostname\n and i'm unable to emulate it))
   NEED_COMPAT_H="yes"
fi

if test "$NEED_COMPAT_H" = "yes"; then
   LIBOBJS="$LIBOBJS compat.o"
   NEED_COMPAT_H="NEED_COMPAT_H"
fi

AC_OUTPUT(Makefile install.sh)
